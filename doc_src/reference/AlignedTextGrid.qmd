# AlignedTextGrid { #aligned_textgrid.aligned_textgrid.AlignedTextGrid }

`aligned_textgrid.AlignedTextGrid(self, textgrid=None, textgrid_path=None, entry_classes=[SequenceInterval])`

An aligned Textgrid

## Parameters

| Name            | Type                                                                                     | Description| Default              |
|-----------------|------------------------------------------------------------------------------------------||----------------------|
| `textgrid`      | Textgrid                                                                                 | A `praatio` TextGrid| `None`               |
| `textgrid_path` | str                                                                                      | A path to a TextGrid file to be  read in with `praatio.textgrid.openTextgrid`                                                                                                                                                                                                                                                                                                                                                                                                                                                            | `None`               |
| `entry_classes` | Sequence\[Sequence\[Type\[SequenceInterval\]\]\] \| Sequence\[Type\[SequenceInterval\]\] | If a single list of `SequenceInterval` subclasses is given, they will be repeated as many times as necessary to assign a class to every tier.  So if there are three speakers, each with a word and phone tier,  `[Word, Phone]` will process them each into a tier group.  If your TextGrids are more complex, provide a nested list with the  class for each tier within each tier group. Say, if only the first speaker had both a word and phone tier, and the remaining two had only a word tier, `[[Word, Phone], [Word], [Word]]` | `[SequenceInterval]` |

## Attributes

| Name          | Type                                                     | Description                                          |
|---------------|----------------------------------------------------------|------------------------------------------------------|
| entry_classes | list\[Sequence\[Type\[SequenceInterval\]\]\] \| list\[\] | The entry classes for each tier within a tier group. |
| tier_groups   | list\[TierGroup\] \| list\[\]                            | A list of `TierGroup` or an empty list.              |
| tier_names    | list\[str\]                                              | A list of names for tiers in tier_groups.            |
| xmax          | float                                                    | Maximum time                                         |
| xmin          | float                                                    | Minimum time                                         |
| \[\]          |                                                          | indexable                                            |

## Methods

| Name | Description |
| --- | --- |
| [get_class_by_name](#aligned_textgrid.aligned_textgrid.AlignedTextGrid.get_class_by_name) | Get an entry class by name |
| [get_intervals_at_time](#aligned_textgrid.aligned_textgrid.AlignedTextGrid.get_intervals_at_time) | Get interval indices at time |
| [interleave_class](#aligned_textgrid.aligned_textgrid.AlignedTextGrid.interleave_class) | Interleave a new entry class. |
| [return_textgrid](#aligned_textgrid.aligned_textgrid.AlignedTextGrid.return_textgrid) | Convert this `AlignedTextGrid` to a `praatio` `Textgrid` |
| [save_textgrid](#aligned_textgrid.aligned_textgrid.AlignedTextGrid.save_textgrid) | Saves the current AlignedTextGrid |
| [shift](#aligned_textgrid.aligned_textgrid.AlignedTextGrid.shift) | Shift all times (interval starts & ends and point times) |

### get_class_by_name { #aligned_textgrid.aligned_textgrid.AlignedTextGrid.get_class_by_name }

`aligned_textgrid.AlignedTextGrid.get_class_by_name(class_name)`

Get an entry class by name

#### Parameters

| Name         | Type   | Description               | Default    |
|--------------|--------|---------------------------|------------|
| `class_name` | str    | The requested entry class | _required_ |

#### Returns

| Type                                                 | Description                           |
|------------------------------------------------------|---------------------------------------|
| SequenceInterval \| list\[SequenceInterval\] \| None | The requested entry class(es), if any |

### get_intervals_at_time { #aligned_textgrid.aligned_textgrid.AlignedTextGrid.get_intervals_at_time }

`aligned_textgrid.AlignedTextGrid.get_intervals_at_time(time)`

Get interval indices at time

Returns a nested list of intervals at `time` for each tier.

#### Parameters

| Name   | Type   | Description   | Default    |
|--------|--------|---------------|------------|
| `time` | float  | time          | _required_ |

#### Returns

| Type                | Description                        |
|---------------------|------------------------------------|
| list\[list\[int\]\] | a nested list of interval indices. |

### interleave_class { #aligned_textgrid.aligned_textgrid.AlignedTextGrid.interleave_class }

`aligned_textgrid.AlignedTextGrid.interleave_class(name, above=None, below=None, timing_from='below', copy_labels=True)`

Interleave a new entry class.

#### Parameters

| Name          | Type                        | Description                                                                                 | Default    |
|---------------|-----------------------------|---------------------------------------------------------------------------------------------|------------|
| `name`        | str                         | Name of the new class                                                                       | _required_ |
| `above`       | SequenceInterval \| str     | Which entry class to interleave above.                                                      | `None`     |
| `below`       | SequenceInterval \| str     | Which entry class to interleave below.                                                      | `None`     |
| `timing_from` | Literal\['above', 'below'\] | Which tier to draw timing from. Defaults to "below".                                        | `'below'`  |
| `copy_labels` | bool                        | Whether or not to copy labels from the tier providing timing information. Defaults to True. | `True`     |

You can set either `above` or `below`, but not both.

### return_textgrid { #aligned_textgrid.aligned_textgrid.AlignedTextGrid.return_textgrid }

`aligned_textgrid.AlignedTextGrid.return_textgrid()`

Convert this `AlignedTextGrid` to a `praatio` `Textgrid`

Returns the current object as a `praatio.data_classes.textgrid.Textgrid`.
Useful for saving.

#### Returns

| Type                                   | Description            |
|----------------------------------------|------------------------|
| praatio.data_classes.textgrid.Textgrid | A `praatio` `Textgrid` |

### save_textgrid { #aligned_textgrid.aligned_textgrid.AlignedTextGrid.save_textgrid }

`aligned_textgrid.AlignedTextGrid.save_textgrid(save_path, format='long_textgrid')`

Saves the current AlignedTextGrid

Uses the `praatio.data_classes.textgrid.Textgrid.save()` method.

#### Parameters

| Name        | Type                                                                  | Description                  | Default           |
|-------------|-----------------------------------------------------------------------|------------------------------|-------------------|
| `save_path` | str                                                                   | path for saving the textgrid | _required_        |
| `format`    | Literal\['short_textgrid', 'long_textgrid', 'json', 'textgrid_json'\] | Save format.                 | `'long_textgrid'` |

### shift { #aligned_textgrid.aligned_textgrid.AlignedTextGrid.shift }

`aligned_textgrid.AlignedTextGrid.shift(increment)`

Shift all times (interval starts & ends and point times)
by the given increment.

#### Parameters

| Name        | Type   | Description                                                               | Default    |
|-------------|--------|---------------------------------------------------------------------------|------------|
| `increment` | float  | The increment by which to shift all times. Could be positive or negative. | _required_ |